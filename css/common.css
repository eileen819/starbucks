/* COMMON */
body {
  color: #333;
  font-size: 16px;
  font-weight: 400;
  line-height: 1.4;
  font-family: "Nanum Gothic", sans-serif;
}
img {
  display: block;
  /* img 태그는 인라인 요소이므로 다루기 쉽게 블럭 요소로 바꿔줌 */
  /* img를 블럭 요소로 만들지 않는다면 인라인요소의 특성인 baseline 아래의 여백이 남게 됨 */
}
a {
  text-decoration: none;
}
.inner {
  width: 1100px;
  margin: 0 auto;
  position: relative;
}
.btn {
  width: 130px;
  padding: 10px;
  border: 2px solid #333;
  border-radius: 4px;
  color: #333;
  font-size: 16px;
  font-weight: 700;
  text-align: center;
  cursor: pointer;
  box-sizing: border-box;
  display: block;
  transition: 0.4s;
}
/* 선택자 우선순위 점수에 의해서 아래 부분 내용이 기존의 내용에 덮어씌어지는 것이 가능함 */
.btn:hover {
  background-color: #333;
  color: #fff;
}
.btn.btn--reverse {
  background-color: #333;
  color: #fff;
}
.btn.btn--reverse:hover {
  background-color: transparent;
  color: #333;
}
.btn.btn--brown {
  color: #592b18;
  border-color: #592b18;
}
.btn.btn--brown:hover {
  color: #fff;
  background-color: #592b18;
}
.btn.btn--gold {
  color: #d9aa8a;
  border-color: #d9aa8a;
}
.btn.btn--gold:hover {
  color: #fff;
  background-color: #d9aa8a;
}
.btn.btn--white {
  color: #fff;
  border-color: #fff;
}
.btn.btn.btn--white:hover {
  color: #333;
  background-color: #fff;
}

/* 공통 요소 애니메이션 처리 */
/* scrollMagic 라이브러리를 사용해서 스크롤에 따른 애니메이션 효과에 대한 css 적용 */
.back-to-position {
  opacity: 0;
  transition: 1s;
}
.back-to-position.to-right {
  transform: translateX(-150px);
}
.back-to-position.to-left {
  transform: translateX(150px);
}
.show .back-to-position {
  opacity: 1;
  transform: translateX(0);
}
/* delay-숫자 와 같은 클래스의 추가로 요소들이 하나씩 delay된 시간에 따라 순차적으로 나타날 수 있게 만들어 줌 */
.show .back-to-position.delay-0 {
  transition-delay: 0s;
}
.show .back-to-position.delay-1 {
  transition-delay: 0.3s;
}
.show .back-to-position.delay-2 {
  transition-delay: 0.6s;
}
.show .back-to-position.delay-3 {
  transition-delay: 0.9s;
}

/* HEADER */
header {
  width: 100%;
  background-color: #f6f5f0;
  border-bottom: 1px solid #c8c8c8;
  position: fixed;
  /* position이 absolute나 fixed가 되면 가로 너비를 최소한으로 줄여서 사용하려고 함
  따라서 width 값을 100%로 줘서 최대한으로 늘려서 사용할 수 있도록 함 */
  top: 0;
  z-index: 9;
}
header > .inner {
  height: 120px;
}

/* HEADER - LOGO */
header .logo {
  height: 75px;
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  margin: auto;
}
/* 요소를 가운데에 배치하기 위해서 position을 사용함. 
이 때, 정확한 요소의 크기(width or height 너비)가 명시되어야만 
margin: auto; 에서 브라우저가 여백의 크기를 자동으로 계산할 수 있음 */

/* HEADER - SUB-MENU */
header .sub-menu {
  display: flex;
  position: absolute;
  top: 10px;
  right: 0;
}
header .sub-menu ul.menu {
  font-family: Arial, sans-serif;
  display: flex;
}
header .sub-menu ul.menu li {
  position: relative;
}

/* 서브 메뉴 사이의 구분선 표시 */
header .sub-menu ul.menu li::before {
  content: "";
  width: 1px;
  height: 12px;
  background-color: #e5e5e5;
  position: absolute;
  /* position: absolute로 인해 display가 block 요소로 자동으로 바뀜 */
  top: 0;
  bottom: 0;
  margin: auto;
}
header .sub-menu ul.menu li:first-child::before {
  display: none;
}

header .sub-menu ul.menu li a {
  font-size: 12px;
  padding: 11px 16px;
  display: block;
  /* a 태그는 인라인 요소이므로 padding 또는 margin 값을 넣기 위해 display: block;으로 설정해 줌 */
  color: #656565;
}
header .sub-menu ul.menu li a:hover {
  color: #000;
}

header .sub-menu .search {
  height: 34px;
  position: relative;
}
header .sub-menu .search input {
  width: 36px;
  height: 34px;
  padding: 4px 10px;
  border: 1px solid #ccc;
  box-sizing: border-box;
  border-radius: 5px;
  outline: none;
  background-color: #fff;
  color: #777;
  font-size: 12px;
  transition: width 0.4s;
}
header .sub-menu .search input:focus {
  width: 190px;
  border-color: #669900;
}
header .sub-menu .search .material-icons {
  height: 24px;
  position: absolute;
  top: 0;
  bottom: 0;
  right: 5px;
  margin: auto;
  transition: 0.4s;
}
header .sub-menu .search.focused .material-icons {
  opacity: 0;
}

/* HEADER - MAIN-MENU */
header .main-menu {
  position: absolute;
  bottom: 0;
  right: 0;
  z-index: 1;
  display: flex;
}
header .main-menu .item .item__name {
  padding: 10px 20px 34px 20px;
  font-family: Arial, sans-serif;
  font-size: 13px;
}

/* .item 요소에 hover 했을 때 .item__name의 스타일링 */
header .main-menu .item:hover .item__name {
  background-color: #2c2a29;
  color: #669900;
  border-radius: 6px 6px 0 0;
}
header .main-menu .item .item__contents {
  width: 100%;
  position: fixed;
  left: 0;
  /* top 이나 bottom 속성을 사용하지 않아 수직 위치 값이 없다면
  요소의 원래 위치를 그대로 사용함.
  만약, position: absolute; 를 사용했다면, (위치상) 부모 요소를 기준으로 하므로
  화면의 뷰포트 좌우 끝까지 늘어날 수 없게 됨 */
  display: none;
}
/* 
왜 이런 현상이 일어나나요?

CSS는 위치를 계산할 때, top이나 bottom을 지정하지 않으면 수직 위치를 계산할 기준이 없습니다. 
그래서 position: fixed가 적용되어도, 기본적으로 요소가 HTML 문서 안에서 배치되었던 기존의 수직 위치를 사용하게 됩니다.
비교: position: absolute의 경우
position: absolute를 사용하면, 요소는 가장 가까운 포지셔닝된 부모 요소(relative, absolute, fixed 중 하나가 적용된 부모)를 기준으로 위치를 계산합니다. 
따라서 top이나 bottom 속성을 생략하면, 그 기준에서 특정한 위치로 이동하지 않고 그대로 남게 됩니다. 

요약
position: fixed를 사용할 때, top이나 bottom 속성을 명시하지 않으면 요소는 문서의 원래 높이를 기준으로 고정됩니다.
수직 위치를 명확히 지정하려면 반드시 top 또는 bottom 속성을 사용해야 합니다.
*/

header .main-menu .item:hover .item__contents {
  display: block;
}
header .main-menu .item .item__contents .contents__menu {
  background-color: #2c2a29;
}
header .main-menu .item .item__contents .contents__menu > ul {
  /* 자식 선택자를 사용해서 다른 ul태그에 영향을 미치지 않도록 해 줌 */
  display: flex;
  padding: 20px 0;
}
header .main-menu .item .item__contents .contents__menu > ul > li {
  width: 220px;
}
header .main-menu .item .item__contents .contents__menu > ul > li h4 {
  padding: 3px 0 12px 0;
  font-size: 14px;
  color: #fff;
}
header .main-menu .item .item__contents .contents__menu > ul > li ul li {
  padding: 5px 0;
  font-size: 12px;
  color: #999;
  cursor: pointer;
}
header .main-menu .item .item__contents .contents__menu > ul > li ul li:hover {
  color: #669900;
}
header .main-menu .item .item__contents .contents__texture {
  padding: 26px 0;
  font-size: 12px;
  /* 부모 요소에 font-size 크기를 넣어서 자식 요소들에 상속되게 함(중복 작성 방지) */
  background-image: url("../images/main_menu_pattern.jpg");
  /* background-repeat의 기본값이 repeat이므로 이미지가 반복되서 나타나 패턴으로 적용됨 */
}
header .main-menu .item .item__contents .contents__texture h4 {
  color: #999;
  font-weight: 700;
}
header .main-menu .item .item__contents .contents__texture p {
  color: #669900;
  margin: 4px 0 14px;
}

header .badges {
  position: absolute;
  top: 132px;
  right: 12px;
}
header .badges .badge {
  border-radius: 10px;
  overflow: hidden;
  margin-bottom: 12px;
  box-shadow: 4px 4px 10px rgba(0, 0, 0, 0.15);
  cursor: pointer;
}

/* FOOTER */
footer {
  background-color: #272727;
  border-top: 1px solid #333;
}
footer .inner {
  padding: 40px 0 60px 0;
}
footer .menu {
  display: flex;
  justify-content: center;
}
footer .menu li {
  position: relative;
}
footer .menu li::before {
  content: "";
  width: 3px;
  height: 3px;
  background-color: #555;
  position: absolute;
  /* 가상요소 before는 인라인 요소이므로 크기를 가지려면 블럭요소가 되어야 함. 
  이 때, position: absolute 로 display 값이 block으로 변경됨을 기억. (따로 display: block; 설정할 필요가 없음) */
  top: 0;
  bottom: 0;
  right: -1px;
  margin: auto;
}
footer .menu li:last-child::before {
  display: none;
}
footer .menu li a {
  color: #ccc;
  font-size: 12px;
  font-weight: 700;
  padding: 15px;
  display: block;
  /* a 태그는 인라인 요소이므로 블럭요소로 바꿔서 클릭할 수 있는 영역을 넓게 만들어 줌 */
}
footer .menu li a.green {
  color: #669900;
}
footer .btn-group {
  margin-top: 20px;
  display: flex;
  justify-content: center;
}
footer .btn-group .btn {
  font-size: 12px;
  margin-right: 10px;
}
footer .btn-group .btn:last-child {
  margin-right: 0;
}
footer .info {
  margin-top: 30px;
  text-align: center;
}
footer .info span {
  margin-right: 20px;
  color: #999;
  font-size: 12px;
}
footer .info span:last-child {
  margin-right: 0;
}
footer .copyright {
  color: #999;
  font-size: 12px;
  text-align: center;
  margin-top: 12px;
}
footer .logo {
  margin: 30px auto 0;
}
/* img 요소가 display: block; + margin: 0 auto 인 경우,
width 속성이 없어도 가운데 정렬이 가능함
현재 이 프로젝트에서 img 요소에 display: block; 이 설정되어 있음 */
